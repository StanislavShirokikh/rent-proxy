<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd">
    <changeSet id="init-user" author="Stanislav">
        <preConditions>
        <not>
            <tableExists tableName="users"/>
        </not>
    </preConditions>
        <sql>
            <![CDATA[
            CREATE TABLE users
            (
                id          BIGSERIAL PRIMARY KEY,
                first_name  VARCHAR NOT NULL,
                second_name VARCHAR NOT NULL,
                last_name   VARCHAR NOT NULL,
                login       VARCHAR NOT NULL,
                password    VARCHAR NOT NULL
            );
            ]]>
        </sql>
    </changeSet>
    <changeSet id="init-post" author="Stanislav">
        <preConditions>
            <not>
                <tableExists tableName="post"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE post
            (
                id       BIGSERIAL PRIMARY KEY,
                users_id INTEGER REFERENCES users(id),
                name     VARCHAR NOT NULL,
                title    VARCHAR NOT NULL,
                price    DOUBLE PRECISION
            );
        </sql>
    </changeSet>
    <changeSet id="init-rent-condition-info" author="Stanislav">
        <preConditions>
            <not>
                <tableExists tableName="rent_condition_info"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE rent_condition_info
            (
                id         SERIAL PRIMARY KEY,
                post_id    INTEGER REFERENCES post(id),
                deposit    VARCHAR,
                commission VARCHAR
            );
        </sql>
    </changeSet>
    <changeSet id="init-type-of-payment" author="Stanislav">
        <preConditions>
            <not>
                <tableExists tableName="type_of_payment"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE type_of_payment
            (
                id   SERIAL PRIMARY KEY,
                name VARCHAR NOT NULL
            );
        </sql>
    </changeSet>
    <changeSet id="init-type-of-payment-to-rent-condition" author="Stanislav">
        <preConditions>
            <not>
                <tableExists tableName="type_of_payment_to_rent_condition"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE type_of_payment_to_rent_condition
            (
                type_of_payment_id        INTEGER REFERENCES type_of_payment(id),
                rent_condition_info_id    INTEGER REFERENCES rent_condition_info(id)
            );
        </sql>
    </changeSet>
    <changeSet id="init-apartment-info" author="Stanislav">
        <preConditions>
            <not>
                <tableExists tableName="apartment_info"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE apartment_info
            (
                id           SERIAL PRIMARY KEY,
                post_id      INTEGER REFERENCES post(id),
                rooms_count  SMALLINT NOT NULL,
                total_area   DOUBLE PRECISION NOT NULL,
                kitchen_area DOUBLE PRECISION,
                flour        SMALLINT,
                additionally VARCHAR
            );
        </sql>
    </changeSet>
    <changeSet id="init-bathroom-type" author="Stanislav">
        <preConditions>
            <not>
                <tableExists tableName="bathroom_type"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE bathroom_type
            (
                id                SMALLSERIAL PRIMARY KEY,
                apartment_info_id INTEGER REFERENCES apartment_info(id),
                name              VARCHAR NOT NULL
            );
        </sql>
    </changeSet>
    <changeSet id="init-repair-type" author="Stanislav">
        <preConditions>
            <not>
                <tableExists tableName="repair_type"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE repair_type
            (
                id                SMALLSERIAL PRIMARY KEY,
                apartment_info_id INTEGER REFERENCES apartment_info(id),
                name              VARCHAR NOT NULL
            );
        </sql>
    </changeSet>
    <changeSet id="init-balcony-type" author="Stanislav">
        <preConditions>
            <not>
                <tableExists tableName="balcony_type"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE balcony_type
            (
                id                SMALLSERIAL PRIMARY KEY,
                apartment_info_id INTEGER REFERENCES apartment_info(id),
                name              VARCHAR NOT NULL
            );
        </sql>
    </changeSet>
    <changeSet id="init-rooms-type" author="Stanislav">
        <preConditions>
            <not>
                <tableExists tableName="rooms_type"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE rooms_type
            (
                id                 SMALLSERIAL PRIMARY KEY,
                apartment_info_id  INTEGER REFERENCES apartment_info(id),
                name               VARCHAR NOT NULL
            );
        </sql>
    </changeSet>
    <changeSet id="init-furniture" author="Stanislav">
        <preConditions>
            <not>
                <tableExists tableName="furniture"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE furniture
            (
                id   SMALLSERIAL PRIMARY KEY,
                name VARCHAR NOT NULL
            );
        </sql>
    </changeSet>
    <changeSet id="init-furniture-to-apartment-info" author="Stanislav">
        <preConditions>
            <not>
                <tableExists tableName="furniture_to_apartment_info"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE furniture_to_apartment_info
            (
                apartment_info_id INTEGER REFERENCES apartment_info(id),
                furniture_id      INTEGER REFERENCES furniture(id)
            );
        </sql>
    </changeSet>
    <changeSet id="init-appliance" author="Stanislav">
        <preConditions>
            <not>
                <tableExists tableName="appliance"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE appliance
            (
                id   SMALLSERIAL PRIMARY KEY,
                name VARCHAR NOT NULL
            );
        </sql>
    </changeSet>
    <changeSet id="init-appliance-to-apartment-info" author="Stanislav">
        <preConditions>
            <not>
                <tableExists tableName="appliance_to_apartment_info"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE appliance_to_apartment_info
            (
                appliance_id      INTEGER REFERENCES appliance(id),
                apartment_info_id INTEGER REFERENCES apartment_info(id)
            );
        </sql>
    </changeSet>
    <changeSet id="init-house-info" author="Stanislav">
        <preConditions>
            <not>
                <tableExists tableName="house_info"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE house_info
            (
                id           SERIAL PRIMARY KEY,
                post_id      INTEGER REFERENCES post(id),
                adress       VARCHAR NOT NULL,
                flours_count SMALLINT
            );
        </sql>
    </changeSet>
    <changeSet id="init-house-type" author="Stanislav">
        <preConditions>
            <not>
                <tableExists tableName="house_type"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE house_type
            (
                id            SMALLSERIAL PRIMARY KEY,
                house_info_id INTEGER REFERENCES house_info(id),
                name          VARCHAR NOT NULL
            );
        </sql>
    </changeSet>
    <changeSet id="init-rent-type" author="Stanislav">
        <preConditions>
            <not>
                <tableExists tableName="rent_type"/>
            </not>
        </preConditions>
        <sql>
            CREATE TABLE rent_type
            (
                id            SMALLSERIAL PRIMARY KEY,
                post_id       INTEGER REFERENCES post(id),
                name          VARCHAR NOT NULL
            );
        </sql>
    </changeSet>
</databaseChangeLog>
